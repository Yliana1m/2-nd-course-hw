// Задание 1
// Напишите функцию, которая возвращает меньшее из 2 чисел. Например, из двух чисел — 8 и 4 — функция должна вернуть 4. Если передадим 6 и 6, то функция должна вернуть 6.

// Задание 2
// Напишите функцию, которая принимает число, а возвращает строку 'Число четное', если число четное, 'Число нечетное' — если нечетное.

// Подсказка
// Четность проверяется с помощью условия 
// n % 2 == 0

// Задание 3
// 3.1. Напишите функцию, которая принимает параметром число и выводит в консоль квадрат этого числа.

// 3.2. Напишите функцию, которая принимает параметром число и возвращает квадрат этого числа.

// Задание 4
// Создайте функцию, которая:

// Спрашивает у пользователя, сколько ему лет.
// Если пользователь вводит отрицательное число, выводит на экран «Вы ввели неправильное значение».
// Если пользователь введет число от 0 до 12, выводит на экран «Привет, друг!».
// Если пользователь введет число больше или равно 13, выводит на экран «Добро пожаловать!».
// *Подсказка: можете выполнить это задание с помощью оператора 
// if else

// Задание 5
// Напишите функцию, которая на вход принимает 2 числа:

// Проверяет, являются ли переданные параметры корректными числами. (Преобразование типов и 
// isNaN()
//  помогут.)
// Если нет, то вернуть строку 'Одно или оба значения не являются числом'.
// Если оба параметра — числа, то вернуть произведение данных чисел.
// Задание 6
// Напишите функцию, которая спрашивает у пользователя число, проверяет его на корректность, после чего возводит его в куб и возвращает следующую строку: 
// 'n в кубе равняется <получившееся значение>'
// . Если переданный параметр не число, вернуть строку 'Переданный параметр не является числом'.

// Проверьте самостоятельно, что данная функция работает корректно и выводит правильный результат с параметрами 
// от 0 до 10
//  включительно.

// Задание 7
// Создайте объекты circle1 и circle2 со свойством 
// radius
// . У объектов должен быть методам 
// getArea
//  , которое возвращает площадь круга через радиус, а также 
// getPerimeter
//  , который возвращает периметр окружности.