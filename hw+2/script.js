// Задание 1
// Создайте программу проверки правильности введенного пароля по следующему алгоритму:

// 1. Создать переменную «пароль» и присвоить ей произвольный текст-пароль. (let password = 'пароль';)
// Создать вторую переменную и с помощью  prompt() спросить у пользователя «Введите пароль».
// Добавить проверку: если пользователь вводит верный пароль, вывести на экран 
// "Пароль введен верно".
// Добавить проверку: если пользователь вводит неверный пароль, вывести на экран 
// "Пароль введен неправильно"

// const password = 'пароль'
// let passEntry= prompt('Введите пароль')
// passEntry === password ? alert("Пароль введен верно"): alert("Пароль введен неправильно")


// Задание 2
// Создайте переменную с и запишите в нее любое число. Если с больше 0 и меньше 10, то выведите в консоль «Верно»,
//  иначе выведите «Неверно».Проверьте работу скрипта при значении переменной c, равной 0, 10, −3, 2.
// Для решения задачи используйте логический оператор && (логическое И).

// const c = 5
// c>0 && c<10 ? console.log('верно'):console.log('неверно');

// Задание 3
// Создайте две переменные — d и e, запишите в них любые числа.Если одна из переменных больше 100, выведите в консоль «Верно», 
// иначе выведите «Неверно».Для решения задачи используйте логический оператор || (логическое ИЛИ).

// const d = 3
// const e = 800

// d > 100 || e > 100 ? console.log('верно'):console.log('неверно');

// Задание 4
// Исправьте код с помощью преобразования типов, чтобы на экран выводилось число 5, а не строка '23':
// let a = '2';
// let b = '3';
// Код выше изменять менять нельзя, чтобы решить задачу исправьте код ниже: 
// alert(a + b);

// let a = 2;
// let b = 3;
// alert(a + b);

// Задание 5
// Напишите программу, которая определяет по номеру месяца в году, к какому сезону этот месяц принадлежит.
//  Например, 1-й месяц (он же январь) принадлежит к сезону «зима».
// Для написания программы используйте оператор switch. Для обозначения номера месяца используйте переменную monthNumber = 12. 
// Пропишите условие, при котором программа не будет выполняться (номер месяца больше 13).


// let monthNumber = Number(prompt('Введите номер месяца'))

// switch (monthNumber) {
// 	case 1:
// 	case 2:
// 	case 12:
// 		alert('Зима')
// 		break;
// 	case 3:
// 	case 4:
// 	case 5:
// 		alert('Весна')
// 		break;
// 	case 6:
// 	case 7:
// 	case 8:
// 		alert('Лето')
// 		break;
// 	case 9:
// 	case 10:
// 	case 11:
// 		alert('Осень')
// 		break;
// 	default:
// 		alert('месяца под таким номером нет')
// }

// Задание 7
// Создайте программу, проверяющую число на четность/нечетность по следующему алгоритму:

// Создать переменную и присвоить ей значение с помощью метода prompt()«Пожалуйста, введите любое число».
// Добавить проверку: является ли введенное значение числом.
// При приведении строки к числу нам вернется либо корректное значение, либо NaN.

// Добавить проверку, является ли число четным или нет.
// Четные числа делятся на 2 без остатка.

// Добавить проверку: если число четное, то вывести пользователю сообщение «Число четное» с помощью
// alert.

// Добавить проверку: если число нечетное, то вывести пользователю сообщение «Число нечетное» с помощью
// alert.Подсказка: вы можете использовать знак %, чтобы определить остаток от деления.


// let num = Number(prompt('Пожалуйста, введите любое число'))

// if (num % 2 === 0) {
// 	alert('Число четное')
// }
// else if (num % 2 !== 0) {
// 	alert('Число нечетное')
// } else {
// 	alert('NaN')
// }





// Задание 8
// Представим, что мы работаем в банке. У нашего банка есть сайт, на который можно зайти с компьютера или телефона, а также мобильное приложение.
//  И нам, и клиенту удобнее с телефона пользоваться мобильным приложением. Поэтому каждый раз, когда пользователь заходит на сайт с телефона, 
// мы должны выдавать ему ссылку на скачивание приложения. Но мы не знаем, iOS или Android он использует.

// Напишите программу, которая определяет, чем пользуется клиент (iOS или Android), и выдает соответствующее сообщение для обоих вариантов.

// Объявите переменную clientOS, которая равна 0 или 1. (0 — iOS, 1 — Android)

// При отработке программы в консоли должно выдаваться сообщение об установке соответствующего приложения.

// Например, для iOS оно будет звучать так:«Установите версию приложения для iOS по ссылке».

// А для Android так:«Установите версию приложения для Android по ссылке».


// let clientOS = Number(prompt('скачать приложение для Android - 1,скачать приложение для iOS - 0'))

// if (clientOS === 1) {
// 	alert('Установите версию приложения для Android по ссылке')
// } else if (clientOS === 0) {
// 	alert('Установите версию приложения для Android по ссылке')
// } else {
// 	alert('Что-то пошло не так. Обновите страницу и попробуйте еще раз')
// }





// Задание 9
// К нам пришли коллеги и сообщили, что нам нужно знать не только операционную систему телефона, но и год его создания: от этого зависит,
//  подойдет ли приложение для телефона или оно просто не установится.

// Если телефон произведен с 2015 по нынешний год, то приложение будет работать корректно.
// Если телефон произведен ранее 2015 года, то клиенту нужно посоветовать установить облегченную версию приложения.
// Ваша задача: написать программу, которая выдает соответствующее сообщение клиенту при наличии двух условий: операционной системы телефона
//  (iOS или Android) и года производства.
// Если год выпуска ранее 2015 года, то к сообщению об установке нужно добавить информацию об облегченной версии.
// Например, для iOS оно будет звучать так: «Установите облегченную версию приложения для iOS по ссылке».
// А для Android так: «Установите облегченную версию приложения для Android по ссылке».
// При этом для пользователей с телефоном с 2015 года выпуска нужно вывести обычное предложение об установке приложения.
// Для обозначения года создания используйте переменную clientDeviceYear, где необходимо указать 2015 год.
// Важно: вложенность больше двух этажей не допускается (условный оператор внутри условного оператора).


// let clientOS = (prompt('скачать приложение для Android - 1 \n скачать приложение для iOS - 0'))

// let clientDeviceYear = (prompt('скачать приложение на устройство с 2015 года выпуска 1 \n скачать приложение на устройство до 2015 года выпуска 0'))

// if (clientOS && clientDeviceYear == 1) {
// 	alert('Установите версию приложения для Android по ссылке')
// } else if (clientOS > clientDeviceYear) {
// 	alert('Установите облегченную версию приложения для Android по ссылке')
// } else if (clientOS === clientDeviceYear) {
// 	alert('Установите облегченную версию приложения для iOS по ссылке')
// } else if (clientOS < clientDeviceYear) {
// 	alert('Установите версию приложения для iOS по ссылке')
// } else {
// 	alert('Что-то пошло не так. Обновите страницу и попробуйте еще раз')
// }